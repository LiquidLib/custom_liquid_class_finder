[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "custom-liquid-class-finder"
version = "0.1.0"
description = "Liquid Class Calibration with Gradient Descent for Opentrons"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Roman Gurovich", email = "romangurovich@gmail.com"}
]
maintainers = [
    {name = "Roman Gurovich", email = "romangurovich@gmail.com"}
]
keywords = [
    "opentrons",
    "liquid-handling",
    "automation",
    "calibration",
    "gradient-descent",
    "bioinformatics",
    "laboratory-automation",
    "pipetting",
    "liquid-class",
    "optimization"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "opentrons>=6.3.0",
    "opentrons-protocol-api>=2.22.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "types-requests>=2.31.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
lint = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/LiquidLib/custom_liquid_class_finder"
Repository = "https://github.com/LiquidLib/custom_liquid_class_finder"
Documentation = "https://github.com/LiquidLib/custom_liquid_class_finder#readme"
Issues = "https://github.com/LiquidLib/custom_liquid_class_finder/issues"
Changelog = "https://github.com/LiquidLib/custom_liquid_class_finder/blob/main/CHANGELOG.md"

[project.scripts]
liquid-class-manager = "liquids.liquid_class_manager:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["liquids*"]

[tool.setuptools.package-data]
"liquids" = ["*.csv"]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "protocol.py",
    "protocol_env.py",
    "run_simulation.py",
    ".venv",
    "venv",
    "__pycache__",
    ".mypy_cache"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["liquids"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "raise ImportError",
]
